<?xml version="1.0" encoding="utf-8"?>
<!-- Created with Liquid Studio 2019 (https://www.liquid-technologies.com) -->
<Syntax xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" language="C#" xmlns="http://tempuri.org/XNodeTypeSystem.xsd">
  <Nodes>
    <!--ExpressionSyntax - Level 0-->
    <Type name="ExpressionSyntax" abstract="true"/>
    <Type name="ParenthesizedExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #parenthesized">
      <Properties>
        <Property name="OpenParenToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" kind="Token" index="2" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="PrefixUnaryExpressionSyntax" base="ExpressionSyntax" operator="true" hashtags="#Expression #expression #unary">
      <Properties>
        <Property name="OperatorToken" kind="Token" index="0" readOnly="true" optional="false" changepoint="true" multiplicity="Single" operator="true">
          <Options exclusive="true" labeling="true">            
            <Kind name="PlusToken" type="UnaryPlusExpression" operator="true"/>
            <Kind name="MinusToken" type="UnaryMinusExpression" operator="true"/>
            <Kind name="TildeToken" type="BitwiseNotExpression" operator="true"/>
            <Kind name="ExclamationToken" type="LogicalNotExpression" operator="true"/>
            <Kind name="PlusPlusToken" type="PreIncrementExpression" operator="true"/>
            <Kind name="MinusMinusToken" type="PreDecrementExpression" operator="true"/>
            <Kind name="AmpersandToken" type="AddressOfExpression" operator="true"/>
            <Kind name="AsteriskToken" type="PointerIndirectionExpression" operator="true"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
            <!--<Topology relevant="true" relevancy="1"/>-->            
          </Rules>
        </Property>
        <Property name="Operand" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Annotations>
        <Annotation context="Suppress" role="Kind"/>
      </Annotations>
    </Type>
    <Type name="AwaitExpressionSyntax" base="ExpressionSyntax" operator="true" hashtags="#Expression #expression">
      <Properties>
        <Property name="AwaitKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="PostfixUnaryExpressionSyntax" base="ExpressionSyntax" operator="true" hashtags="#Expression #expression #unary">
      <Properties>
        <Property name="OperatorToken" kind="Token" index="1" readOnly="true" optional="false" changepoint="true" multiplicity="Single" operator="true">
          <Options exclusive="true" labeling="true">
            <Kind name="PlusPlusToken" type="PostIncrementExpression" operator="true"/>
            <Kind name="MinusMinusToken" type="PostDecrementExpression" operator="true"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
            <!--<Topology relevant="true" relevancy="1"/>-->
          </Rules>
        </Property>
        <Property name="Operand" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Annotations>
        <Annotation context="Suppress" role="Kind"/>
      </Annotations>
      <!--prefix unary compatible?-->
    </Type>
    <Type name="MemberAccessExpressionSyntax" base="ExpressionSyntax" operator="true" hashtags="#Expression #expression #member #access">
      <Properties>
        <Property name="Expression" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="OperatorToken" kind="Token" index="1" readOnly="true" optional="false" changepoint="true" multiplicity="Single" operator="true">
          <Options exclusive="true" labeling="true">            
            <Kind name="DotToken" type="SimpleMemberAccessExpression" operator="true"/>
            <Kind name="MinusGreaterThanToken" type="PointerMemberAccessExpression" operator="true"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
            <!--<Topology relevant="true" relevancy="1"/>-->
          </Rules>
        </Property>
        <Property name="Name" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
      <Annotations>
        <Annotation context="Suppress" role="Kind"/>
      </Annotations>
    </Type>
    <Type name="ConditionalAccessExpressionSyntax" base="ExpressionSyntax" operator="true" hashtags="#Expression #expression #access #conditional">
      <Properties>
        <Property name="Expression" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="OperatorToken" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" operator="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="WhenNotNull" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="MemberBindingExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #member">
      <Properties>
        <Property name="OperatorToken" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" operator="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Name" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="ElementBindingExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #element">
      <Properties>
        <Property name="ArgumentList" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>
    <Type name="ImplicitElementAccessSyntax" base="ExpressionSyntax" hashtags="#Expression #element #access #implicit">
      <Properties>
        <Property name="ArgumentList" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>
    <Type name="BinaryExpressionSyntax" base="ExpressionSyntax" operator="true" hashtags="#Expression #expression">
      <Properties>
        <Property name="Left" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="OperatorToken" kind="Token" index="1" readOnly="true" optional="false" changepoint="true" multiplicity="Single" operator="true">
          <Options exclusive="true" labeling="true">
            <Kind name="PlusToken" type="AddExpression" operator="true"/>
            <Kind name="MinusToken" type="SubtractExpression" operator="true"/>
            <Kind name="AsteriskToken" type="MultiplyExpression" operator="true"/>
            <Kind name="SlashToken" type="DivideExpression" operator="true"/>
            <Kind name="PercentToken" type="ModuloExpression" operator="true"/>
            <Kind name="LessThanLessThanToken" type="LeftShiftExpression" operator="true"/>
            <Kind name="GreaterThanGreaterThanToken" type="RightShiftExpression" operator="true"/>
            <Kind name="BarBarToken" type="LogicalOrExpression" operator="true"/>
            <Kind name="AmpersandAmpersandToken" type="LogicalAndExpression" operator="true"/>
            <Kind name="BarToken" type="BitwiseOrExpression" operator="true"/>
            <Kind name="AmpersandToken" type="BitwiseAndExpression" operator="true"/>
            <Kind name="CaretToken" type="ExclusiveOrExpression" operator="true"/>
            <Kind name="EqualsEqualsToken" type="EqualsExpression" operator="true"/>
            <Kind name="ExclamationEqualsToken" type="NotEqualsExpression" operator="true"/>
            <Kind name="LessThanToken" type="LessThanExpression" operator="true"/>
            <Kind name="LessThanEqualsToken" type="LessThanOrEqualExpression" operator="true"/>
            <Kind name="GreaterThanToken" type="GreaterThanExpression" operator="true"/>
            <Kind name="GreaterThanEqualsToken" type="GreaterThanOrEqualExpression" operator="true"/>
            <Kind name="IsKeyword" type="IsExpression" operator="true" keyword="true"/>
            <Kind name="AsKeyword" type="AsExpression" operator="true" keyword="true"/>
            <Kind name="QuestionQuestionToken" type="CoalesceExpression" operator="true"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
            <!--<Topology relevant="true" relevancy="1"/>-->
          </Rules>
        </Property>
        <Property name="Right" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Annotations>
        <Annotation context="Suppress" role="Kind"/>
      </Annotations>
    </Type>
    <Type name="AssignmentExpressionSyntax" base="ExpressionSyntax" operator="true" hashtags="#Expression #expression">
      <Properties>
        <Property name="Left" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="OperatorToken" kind="Token" index="1" readOnly="true" optional="false" changepoint="true" multiplicity="Single" operator="true">
          <Options exclusive="true" labeling="true">
            <Kind name="EqualsToken" type="SimpleAssignmentExpression" operator="true"/>
            <Kind name="PlusEqualsToken" type="AddAssignmentExpression" operator="true"/>
            <Kind name="MinusEqualsToken" type="SubtractAssignmentExpression" operator="true"/>
            <Kind name="AsteriskEqualsToken" type="MultiplyAssignmentExpression" operator="true"/>
            <Kind name="SlashEqualsToken" type="DivideAssignmentExpression" operator="true"/>
            <Kind name="PercentEqualsToken" type="ModuloAssignmentExpression" operator="true"/>
            <Kind name="AmpersandEqualsToken" type="AndAssignmentExpression" operator="true"/>
            <Kind name="CaretEqualsToken" type="ExclusiveOrAssignmentExpression" operator="true"/>
            <Kind name="BarEqualsToken" type="OrAssignmentExpression" operator="true"/>
            <Kind name="LessThanLessThanEqualsToken" type="LeftShiftAssignmentExpression" operator="true"/>
            <Kind name="GreaterThanGreaterThanEqualsToken" type="RightShiftAssignmentExpression" operator="true"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
            <!--<Topology relevant="true" relevancy="1"/>-->
          </Rules>
        </Property>
        <Property name="Right" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Annotations>
        <Annotation context="Suppress" role="Kind"/>
      </Annotations>
    </Type>
    <Type name="ConditionalExpressionSyntax" base="ExpressionSyntax" operator="true" hashtags="#Expression #expression #conditional">
      <Properties>
        <Property name="Condition" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="QuestionToken" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="WhenTrue" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ColonToken" kind="Token" index="3" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="WhenFalse" kind="Node" index="4" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <!--ExpressionSyntax$InstanceExpressionSyntax-->
    <Type name="InstanceExpressionSyntax" abstract="true" base="ExpressionSyntax"/>
    <Type name="ThisExpressionSyntax" base="InstanceExpressionSyntax" token="true" readonly="true" hashtags="#Expression #expression #Expression#Instance">
      <Properties>
        <Property name="Token" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="BaseExpressionSyntax" base="InstanceExpressionSyntax" token="true" readonly="true" hashtags="#Expression #expression #Expression#Instance #base">
      <Properties>
        <Property name="Token" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <!--ExpressionSyntax-->
    <Type name="LiteralExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression">
      <Properties>
        <Property name="Token" kind="Token" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Options exclusive="true" labeling="true">
            <Kind name="ArgListKeyword" type="ArgListExpression" keyword="true"/>
            <Kind name="NumericLiteralToken" type="NumericLiteralExpression" literal="true" readonly="false"/>
            <Kind name="StringLiteralToken" type="StringLiteralExpression" literal="true" readonly="false"/>
            <Kind name="CharacterLiteralToken" type="CharacterLiteralExpression" literal="true" readonly="false"/>
            <Kind name="TrueKeyword" type="TrueLiteralExpression" keyword="true" operator="true"/>
            <Kind name="FalseKeyword" type="FalseLiteralExpression" keyword="true" operator="true"/>
            <Kind name="NullKeyword" type="NullLiteralExpression" keyword="true" operator="true"/>
            <Kind name="DefaultKeyword" type="DefaultLiteralExpression" keyword="true" operator="true"/>
            <!--all the keywords are readonly, the others do not. Or... seen different... no literal is read only.-->
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Annotations>
        <Annotation context="Suppress" role="Kind"/>
      </Annotations>
    </Type>
    <Type name="MakeRefExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #ref">
      <Properties>
        <Property name="Keyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenParenToken" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" kind="Token" index="3" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="RefTypeExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #type #ref">
      <Properties>
        <Property name="Keyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenParenToken" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" kind="Token" index="3" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="RefValueExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #ref">
      <Properties>
        <Property name="Keyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenParenToken" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Comma" kind="Token" index="3" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Type" kind="Node" index="4" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" kind="Token" index="5" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="CheckedExpressionSyntax" base="ExpressionSyntax" operator="true" hashtags="#Expression #expression #checked">
      <Properties>
        <Property name="Keyword" kind="Token" index="0" readOnly="true" optional="false" changepoint="true" multiplicity="Single" keyword="true">
          <Options exclusive="true" labeling="true">            
            <Kind name="CheckedKeyword" type="CheckedExpression" keyword="true"/>
            <Kind name="UncheckedKeyword" type="UncheckedExpression" keyword="true"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenParenToken" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" kind="Token" index="3" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Annotations>
        <Annotation context="Suppress" role="Kind"/>
      </Annotations>
    </Type>
    <Type name="DefaultExpressionSyntax" base="ExpressionSyntax" operator="true" hashtags="#Expression #expression">
      <Properties>
        <Property name="Keyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenParenToken" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Type" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" kind="Token" index="3" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="TypeOfExpressionSyntax" base="ExpressionSyntax" operator="true" hashtags="#Expression #expression #type">
      <Properties>
        <Property name="Keyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenParenToken" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Type" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" kind="Token" index="3" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="SizeOfExpressionSyntax" base="ExpressionSyntax" operator="true" hashtags="#Expression #expression">
      <Properties>
        <Property name="Keyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenParenToken" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Type" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" kind="Token" index="3" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="InvocationExpressionSyntax" base="ExpressionSyntax" operator="true" hashtags="#Expression #expression">
      <Properties>
        <Property name="Expression" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ArgumentList" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="ElementAccessExpressionSyntax" base="ExpressionSyntax" operator="true" hashtags="#Expression #expression #element #access">
      <Properties>
        <Property name="Expression" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ArgumentList" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="CastExpressionSyntax" base="ExpressionSyntax" operator="true" hashtags="#Expression #expression">
      <Properties>
        <Property name="OpenParenToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Type" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" kind="Token" index="2" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" kind="Node" index="3" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <!--ExpressionSyntax$AnonymousFunctionExpressionSyntax-->
    <Type name="AnonymousFunctionExpressionSyntax" abstract="true" base="ExpressionSyntax">
      <Properties>
        <Property name="AsyncKeyword" kind="Token" index="0" optional="false" multiplicity="Single" keyword="true">
        </Property>
        <Property name="Body" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="AnonymousMethodExpressionSyntax" base="AnonymousFunctionExpressionSyntax" operator="true" hashtags="#Expression #expression #anonymous #Expression#AnonymousFunction #DECLARATION#FUNCTION">
      <Properties>
        <Property name="AsyncKeyword" kind="Token" index="0" readOnly="true" optional="true" changepoint="true" inherited="true" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="DelegateKeyword" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="ParameterList" kind="Node" index="2" optional="true" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Body" kind="Node" index="3" optional="false" changepoint="true" inherited="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Signature equality="true" absolute="true"/>
      </Rules>
    </Type>
    <!--ExpressionSyntax$AnonymousFunctionExpressionSyntax$LambdaExpressionSyntax-->
    <Type name="LambdaExpressionSyntax" abstract="true" base="AnonymousFunctionExpressionSyntax">
      <Properties>
        <Property name="ArrowToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single">
        </Property>
      </Properties>
    </Type>
    <Type name="SimpleLambdaExpressionSyntax" base="LambdaExpressionSyntax" operator="true" hashtags="#Expression #expression #ANONYMOUS #Expression#AnonymousFunction #Expression#AnonymousFunction#Lambda #DECLARATION#FUNCTION">
      <Properties>
        <Property name="AsyncKeyword" kind="Token" index="0" readOnly="true" optional="true" changepoint="true" inherited="true" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Parameter" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ArrowToken" kind="Token" index="2" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Body" kind="Node" index="3" optional="false" changepoint="true" inherited="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Signature equality="true" absolute="true"/>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="ParenthesizedLambdaExpressionSyntax" base="LambdaExpressionSyntax" operator="true" hashtags="#Expression #expression #ANONYMOUS #Expression#AnonymousFunction #Expression#AnonymousFunction#Lambda #parenthesized #DECLARATION#FUNCTION">
      <Properties>
        <Property name="AsyncKeyword" kind="Token" index="0" readOnly="true" optional="true" changepoint="true" inherited="true" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="ParameterList" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ArrowToken" kind="Token" index="2" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Body" kind="Node" index="3" optional="false" changepoint="true" inherited="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Signature equality="true" absolute="true"/>
      </Rules>
    </Type>
    <!--ExpressionSyntax-->
    <Type name="InitializerExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #initializer">
      <Properties>
        <Property name="OpenBraceToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expressions" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Collection" collectionType="ExpressionSyntax" collectionSeparator=",">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseBraceToken" kind="Token" index="2" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Options exclusive="true">
        <Type name="ObjectInitializerExpression"/>
        <Type name="CollectionInitializerExpression"/>
        <Type name="ArrayInitializerExpression"/>
        <Type name="ComplexElementInitializerExpression"/>
      </Options>
      <Rules collection="true"/>
      <Annotations>
        <Annotation context="Suppress" role="Kind"/>
      </Annotations>
    </Type>
    <Type name="ObjectCreationExpressionSyntax" base="ExpressionSyntax" operator="true" hashtags="#Expression #expression #creation #object">
      <Properties>
        <Property name="NewKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Type" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ArgumentList" kind="Node" index="2" optional="true" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Initializer" kind="Node" index="3" optional="true" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="AnonymousObjectCreationExpressionSyntax" base="ExpressionSyntax" operator="true" hashtags="#Expression #expression #anonymous #creation #object">
      <Properties>
        <Property name="NewKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenBraceToken" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Initializers" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Collection" collectionType="AnonymousObjectMemberDeclaratorSyntax" collectionSeparator=",">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseBraceToken" kind="Token" index="3" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>
    <Type name="ArrayCreationExpressionSyntax" base="ExpressionSyntax" operator="true" hashtags="#Expression #expression #array #creation">
      <Properties>
        <Property name="NewKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Type" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Initializer" kind="Node" index="2" optional="true" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="ImplicitArrayCreationExpressionSyntax" base="ExpressionSyntax" operator="true" hashtags="#Expression #expression #array #creation #implicit">
      <Properties>
        <Property name="NewKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenBracketToken" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Commas" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Collection">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
          <!-- puntuaction="true"? -->
        </Property>
        <Property name="CloseBracketToken" kind="Token" index="3" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Initializer" kind="Node" index="4" optional="false" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="StackAllocArrayCreationExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #array #creation">
      <Properties>
        <Property name="StackAllocKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Type" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="QueryExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #query">
      <Properties>
        <Property name="FromClause" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Body" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="InterpolatedStringExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression">
      <Properties>
        <Property name="StringStartToken" kind="Token" index="0" optional="false" multiplicity="Single" puntuaction="true">
          <Options exclusive="true">
            <Kind name="InterpolatedStringStartToken" puntuaction="true"/>
            <Kind name="InterpolatedVerbatimStringStartToken" puntuaction="true"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
          <!-- readOnly="true"-->
        </Property>
        <Property name="Contents" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Collection" collectionType="InterpolatedStringContentSyntax">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="StringEndToken" kind="Token" index="2" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>
    <!--And Related-->
    <Type name="InterpolatedStringContentSyntax" abstract="true"/>
    <Type name="InterpolatedStringTextSyntax" base="InterpolatedStringContentSyntax" hashtags="#INTERPOLATION#STRING #INTERPOLATION#STRING#Content #text">
      <Properties>
        <Property name="TextToken" kind="Token" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="InterpolationSyntax" base="InterpolatedStringContentSyntax" hashtags="#interpolation #INTERPOLATION#STRING#Content">
      <Properties>
        <Property name="OpenBraceToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="AlignmentClause" kind="Node" index="2" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="FormatClause" kind="Node" index="3" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseBraceToken" kind="Token" index="4" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="InterpolationAlignmentClauseSyntax" hashtags="#clause #interpolation">
      <Properties>
        <Property name="CommaToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Value" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="InterpolationFormatClauseSyntax" hashtags="#clause #interpolation">
      <Properties>
        <Property name="ColonToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="FormatStringToken" kind="Token" index="0" optional="false" changepoint="true" multiplicity="Single">
          <!-- puntuaction="true"? I think this property should not be readonly-->
          <Rules>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <!--And Related$BaseArgumentListSyntax-->
    <Type name="BaseArgumentListSyntax" abstract="true">
      <Properties>
        <Property name="Arguments" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Collection" collectionType="ArgumentSyntax" collectionSeparator=",">
        </Property>
      </Properties>
    </Type>
    <Type name="ArgumentListSyntax" base="BaseArgumentListSyntax" hashtags="#LIST#Argument #argument #list">
      <Properties>
        <Property name="OpenParenToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Arguments" kind="Node" index="1" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="ArgumentSyntax" collectionSeparator=",">
          <Rules collection="true">
            <!--<Name equality="true" absolute="true"/>-->
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" kind="Token" index="2" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>
    <Type name="BracketedArgumentListSyntax" base="BaseArgumentListSyntax" hashtags="#LIST#Argument #argument #list #bracketed">
      <Properties>
        <Property name="OpenBracketToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Arguments" kind="Node" index="1" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="ArgumentSyntax" collectionSeparator=",">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseBracketToken" kind="Token" index="2" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>
    <!--And Related-->
    <Type name="ArgumentSyntax" hashtags="#argument">
      <Properties>
        <Property name="NameColon" kind="Node" index="0" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="RefKindKeyword" kind="Token" index="1" optional="true" changepoint="true" multiplicity="Single" keyword="true">
          <Options exclusive="true">
            <Kind name="RefKeyword" keyword="true"/>
            <Kind name="OutKeyword" keyword="true"/>
            <Kind name="InKeyword" keyword="true"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="NameColonSyntax" hashtags="#IDENTIFIER#WRAPPER #name #equals">
      <Properties>
        <Property name="Name" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ColonToken" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Compatibility>
          <Name equality="true" absolute="true" type="NameEqualsSyntax" twoWay="true">
            <Condition code="{0}.Name.Identifier.ValueText == {1}.Name.Identifier.ValueText"/>
          </Name>
        </Compatibility>
      </Rules>
    </Type>
    <Type name="NameEqualsSyntax" hashtags="#IDENTIFIER#WRAPPER #name #equals">
      <Properties>
        <Property name="Name" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EqualsToken" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="AnonymousObjectMemberDeclaratorSyntax" hashtags="#member #anonymous #DECLARATION #object #declarator">
      <Properties>
        <Property name="NameEquals" kind="Node" index="0" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Expression" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
      <!--Field, Property, and Variable Compatible-->
    </Type>
    <Type name="QueryBodySyntax" hashtags="#query">
      <Properties>
        <Property name="Clauses" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Collection" collectionType="QueryClauseSyntax">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SelectOrGroup" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Continuation" kind="Node" index="2" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <!--And Related$QueryClauseSyntax-->
    <Type name="QueryClauseSyntax" abstract="true"/>
    <Type name="FromClauseSyntax" base="QueryClauseSyntax" hashtags="#QUERY#Clause #clause">
      <Properties>
        <Property name="FromKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Type" kind="Node" index="1" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" kind="Token" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="InKeyword" kind="Token" index="3" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" kind="Node" index="4" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="LetClauseSyntax" base="QueryClauseSyntax" hashtags="#clause #QUERY#Clause">
      <Properties>
        <Property name="LetKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" kind="Token" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true" priority="0"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EqualsToken" kind="Token" index="2" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" kind="Node" index="3" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true" priority="1"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="JoinClauseSyntax" base="QueryClauseSyntax" hashtags="#clause #QUERY#Clause #join">
      <Properties>
        <Property name="JoinKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Type" kind="Node" index="1" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" kind="Token" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="InKeyword" kind="Token" index="3" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="InExpression" kind="Node" index="4" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="OnKeyword" kind="Token" index="5" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="LeftExpression" kind="Node" index="6" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EqualsKeyword" kind="Token" index="7" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="RightExpression" kind="Node" index="8" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Into" kind="Node" index="9" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true" priority="1"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="JoinIntoClauseSyntax" hashtags="#QUERY #join #clause">
      <Properties>
        <Property name="IntoKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" kind="Token" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="WhereClauseSyntax" base="QueryClauseSyntax" hashtags="#clause #QUERY#Clause">
      <Properties>
        <Property name="WhereKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Condition" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="OrderByClauseSyntax" base="QueryClauseSyntax" hashtags="#clause #ORDERBY #QUERY#Clause">
      <Properties>
        <Property name="OrderByKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Orderings" kind="Node" index="0" optional="false" multiplicity="Collection" collectionType="OrderingSyntax" collectionSeparator=",">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>
    <Type name="OrderingSyntax" hashtags="#ORDERBY">
      <Properties>
        <Property name="Expression" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="AscendingOrDescendingKeyword" kind="Token" index="1" readOnly="true" optional="true" multiplicity="Single" keyword="true">
          <Options exclusive="true" labeling="true">
            <Kind name="AscendingKeyword" type="AscendingOrdering" keyword="true"/>
            <Kind name="DescendingKeyword" type="DescendingOrdering" keyword="true"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
            <!--<Topology relevant="true"/>?-->
          </Rules>
        </Property>
      </Properties>
      <Annotations>
        <Annotation context="Suppress" role="Kind"/>
      </Annotations>
    </Type>
    <!--And Related$SelectOrGroupClauseSyntax-->
    <Type name="SelectOrGroupClauseSyntax" abstract="true"/>
    <Type name="SelectClauseSyntax" base="SelectOrGroupClauseSyntax" hashtags="#clause #QUERY#CLAUSE#SelectOrGroup">
      <Properties>
        <Property name="SelectKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="GroupClauseSyntax" base="SelectOrGroupClauseSyntax" hashtags="#clause #QUERY#CLAUSE#SelectOrGroup">
      <Properties>
        <Property name="GroupKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="GroupExpression" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ByKeyword" kind="Token" index="2" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="ByExpression" kind="Node" index="3" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="QueryContinuationSyntax" hashtags="#query">
      <Properties>
        <Property name="IntoKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" kind="Token" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true" priority="0"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Body" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true" priority="1"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>

    <!--ExpressionSyntax$TypeSyntax - Level 0-->
    <Type name="TypeSyntax" abstract="true" base="ExpressionSyntax"/>
    <Type name="PredefinedTypeSyntax" base="TypeSyntax" readonly="true" hashtags="#Expression #Expression#Type #type">
      <Properties>
        <Property name="Keyword" kind="Token" index="0" readOnly="true" optional="false" changepoint="true" multiplicity="Single" keyword="true">
          <Options exclusive="true">            
            <Kind name="BoolKeyword" keyword="true"/>
            <Kind name="ByteKeyword" keyword="true"/>
            <Kind name="SByteKeyword" keyword="true"/>
            <Kind name="IntKeyword" keyword="true"/>
            <Kind name="UIntKeyword" keyword="true"/>
            <Kind name="ShortKeyword" keyword="true"/>
            <Kind name="UShortKeyword" keyword="true"/>
            <Kind name="LongKeyword" keyword="true"/>
            <Kind name="ULongKeyword" keyword="true"/>
            <Kind name="FloatKeyword" keyword="true"/>
            <Kind name="DoubleKeyword" keyword="true"/>
            <Kind name="DecimalKeyword" keyword="true"/>
            <Kind name="StringKeyword" keyword="true"/>
            <Kind name="CharKeyword" keyword="true"/>
            <Kind name="ObjectKeyword" keyword="true"/>
            <Kind name="VoidKeyword" keyword="true"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
            <!--<Topology relevant="true"/>-->
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Compatibility>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.BoolKeyword"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Boolean&quot;"/>
          </Alias>
          <Alias type="QualifiedNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.BoolKeyword"/>
            <Condition code="({1}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({1}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Boolean&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.ByteKeyword"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Byte&quot;"/>
          </Alias>
          <Alias type="QualifiedNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.ByteKeyword"/>
            <Condition code="({1}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({1}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Byte&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.SByteKeyword"/>
            <Condition code="{1}.Identifier.ValueText == &quot;SByte&quot;"/>
          </Alias>
          <Alias type="QualifiedNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.SByteKeyword"/>
            <Condition code="({1}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({1}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;SByte&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.IntKeyword"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Int32&quot;"/>
          </Alias>
          <Alias type="QualifiedNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.IntKeyword"/>
            <Condition code="({1}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({1}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Int32&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.UIntKeyword"/>
            <Condition code="{1}.Identifier.ValueText == &quot;UInt32&quot;"/>
          </Alias>
          <Alias type="QualifiedNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.UIntKeyword"/>
            <Condition code="({1}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({1}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;UInt32&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.ShortKeyword"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Int16&quot;"/>
          </Alias>
          <Alias type="QualifiedNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.ShortKeyword"/>
            <Condition code="({1}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({1}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Int16&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.UShortKeyword"/>
            <Condition code="{1}.Identifier.ValueText == &quot;UInt16&quot;"/>
          </Alias>
          <Alias type="QualifiedNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.UShortKeyword"/>
            <Condition code="({1}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({1}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;UInt16&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.LongKeyword"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Int64&quot;"/>
          </Alias>
          <Alias type="QualifiedNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.LongKeyword"/>
            <Condition code="({1}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({1}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Int64&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.ULongKeyword"/>
            <Condition code="{1}.Identifier.ValueText == &quot;UInt64&quot;"/>
          </Alias>
          <Alias type="QualifiedNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.ULongKeyword"/>
            <Condition code="({1}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({1}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;UInt64&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.FloatKeyword"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Single&quot;"/>
          </Alias>
          <Alias type="QualifiedNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.FloatKeyword"/>
            <Condition code="({1}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({1}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Single&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.DoubleKeyword"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Double&quot;"/>
          </Alias>
          <Alias type="QualifiedNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.DoubleKeyword"/>
            <Condition code="({1}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({1}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Double&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.DecimalKeyword"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Decimal&quot;"/>
          </Alias>
          <Alias type="QualifiedNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.DecimalKeyword"/>
            <Condition code="({1}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({1}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Decimal&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.StringKeyword"/>
            <Condition code="{1}.Identifier.ValueText == &quot;String&quot;"/>
          </Alias>
          <Alias type="QualifiedNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.StringKeyword"/>
            <Condition code="({1}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({1}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;String&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.CharKeyword"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Char&quot;"/>
          </Alias>
          <Alias type="QualifiedNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.CharKeyword"/>
            <Condition code="({1}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({1}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Char&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.ObjectKeyword"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Object&quot;"/>
          </Alias>
          <Alias type="QualifiedNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.ObjectKeyword"/>
            <Condition code="({1}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({1}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Object&quot;"/>
          </Alias>          
        </Compatibility>
      </Rules>
    </Type>
    <Type name="ArrayTypeSyntax" base="TypeSyntax" hashtags="#Expression #array #Expression#Type #type">
      <Properties>
        <Property name="ElementType" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="RankSpecifiers" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Collection" collectionType="ArrayRankSpecifierSyntax">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="PointerTypeSyntax" base="TypeSyntax" hashtags="#Expression #Expression#Type #type">
      <Properties>
        <Property name="ElementType" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="AsteriskToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="NullableTypeSyntax" base="TypeSyntax" hashtags="#Expression #Expression#Type #type">
      <Properties>
        <Property name="ElementType" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="QuestionToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="OmittedTypeArgumentSyntax" base="TypeSyntax" readonly="true" symbolic="true" hashtags="#Expression #Expression#Type #type#argument #omitted #argument #type">
      <Properties>
        <Property name="OmittedTypeArgumentToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" symbolic="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <!--ExpressionSyntax$TypeSyntax$NameSyntax-->
    <Type name="NameSyntax" abstract="true" base="TypeSyntax"/>
    <Type name="QualifiedNameSyntax" base="NameSyntax" hashtags="#Expression #Expression#Type #Expression#Type#Name #qualified #name">
      <Properties>
        <Property name="Left" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="DotToken" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Right" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
        <Compatibility>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="({0}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({0}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Boolean&quot;"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Boolean&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="({0}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({0}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Byte&quot;"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Byte&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="({0}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({0}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;SByte&quot;"/>
            <Condition code="{1}.Identifier.ValueText == &quot;SByte&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="({0}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({0}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Int32&quot;"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Int32&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="({0}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({0}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;UInt32&quot;"/>
            <Condition code="{1}.Identifier.ValueText == &quot;UInt32&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="({0}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({0}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Int16&quot;"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Int16&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="({0}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({0}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;UInt16&quot;"/>
            <Condition code="{1}.Identifier.ValueText == &quot;UInt16&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="({0}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({0}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Int64&quot;"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Int64&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="({0}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({0}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;UInt64&quot;"/>
            <Condition code="{1}.Identifier.ValueText == &quot;UInt64&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="({0}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({0}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Single&quot;"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Single&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="({0}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({0}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Double&quot;"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Double&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="({0}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({0}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Decimal&quot;"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Decimal&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="({0}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({0}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;String&quot;"/>
            <Condition code="{1}.Identifier.ValueText == &quot;String&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="({0}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({0}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Char&quot;"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Char&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="({0}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({0}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Object&quot;"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Object&quot;"/>
          </Alias>          
        </Compatibility>
      </Rules>
    </Type>
    <Type name="AliasQualifiedNameSyntax" base="NameSyntax" hashtags="#Expression #Expression#Type #Expression#Type#Name #qualified #alias #name">
      <Properties>
        <Property name="Alias" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ColonColonToken" kind="Token" index="1" readOnly="true" optional="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Name" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <!--ExpressionSyntax$TypeSyntax$NameSyntax$SimpleNameSyntax-->
    <Type name="SimpleNameSyntax" abstract="true" base="NameSyntax">
      <Properties>
        <Property name="Identifier" kind="Token" index="0" optional="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="IdentifierNameSyntax" base="SimpleNameSyntax" hashtags="#Expression #Expression#Type #Expression#Type#Name #Expression#Type#Name#Simple #name">
      <Properties>
        <Property name="Identifier" kind="Token" index="0" optional="false" changepoint="true" inherited="true" multiplicity="Single">
          <Options exclusive="true">
             <Kind name="IdentifierToken" identifier="true" readonly="false"/>
             <Kind name="GlobalKeyword" keyword="true"/>
          </Options>
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="GenericNameSyntax" base="SimpleNameSyntax" hashtags="#Expression #Expression#Type #Expression#Type#Name #Expression#Type#Name#Simple #name">
      <Properties>
        <Property name="Identifier" kind="Token" index="0" optional="false" changepoint="true" inherited="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true" priority="0"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="TypeArgumentList" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Pairwise discriminant="true" priority="1"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <!--And Related-->
    <Type name="TypeArgumentListSyntax" hashtags="#list #argument #type #type#argument">
      <Properties>
        <Property name="LessThanToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Arguments" kind="Node" index="1" optional="false" multiplicity="Collection" collectionType="TypeSyntax" collectionSeparator=",">
          <Rules collection="true">
            <!--<Name equality="true" absolute="true"/>-->
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="GreaterThanToken" kind="Token" index="2" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>
    <Type name="ArrayRankSpecifierSyntax" hashtags="#array #specifier">
      <Properties>
        <Property name="OpenBracketToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Sizes" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Collection" collectionType="ExpressionSyntax" collectionSeparator=",">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseBracketToken" kind="Token" index="2" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>
    <Type name="OmittedArraySizeExpressionSyntax" base="ExpressionSyntax" readonly="true" symbolic="true" hashtags="#Expression #expression #array #omitted">
      <Properties>
        <Property name="OmittedArraySizeExpressionToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" symbolic="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>

    <!--StatementSyntax \ {GlobalStatementSyntax in fact inherits from member declaration} - Level 1-->
    <Type name="StatementSyntax" abstract="true"/>
    <Type name="BlockSyntax" base="StatementSyntax" hashtags="#Statement">
      <Properties>
        <Property name="OpenBraceToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Statements" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Collection" collectionType="StatementSyntax">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseBraceToken" kind="Token" index="2" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>
    <Type name="LocalDeclarationStatementSyntax" base="StatementSyntax" hashtags="#Statement #statement #declaration #DECLARATION#LOCAL #DECLARATION#VARIABLE"><!--declaration-->
      <Properties>
        <Property name="Modifiers" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Collection">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Declaration" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" kind="Token" index="2" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="ExpressionStatementSyntax" base="StatementSyntax" hashtags="#Statement #statement #expression #EXPRESSION#WRAPPER">
      <Properties>
        <Property name="Expression" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="EmptyStatementSyntax" base="StatementSyntax" readonly="true" hashtags="#Statement #statement">
      <Properties>
        <Property name="SemicolonToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="LabeledStatementSyntax" base="StatementSyntax" hashtags="#Statement #statement #label">
      <Properties>
        <Property name="Identifier" kind="Token" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true" priority="0"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ColonToken" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Statement" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules eventuallyCollection="true">
            <Pairwise discriminant="true" priority="1"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="GotoStatementSyntax" base="StatementSyntax" hashtags="#Statement #statement">
      <Properties>
        <Property name="GotoKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="CaseOrDefaultKeyword" kind="Token" index="1" readOnly="true" optional="true" changepoint="true" multiplicity="Single" keyword="true">
          <Options exclusive="true" labeling="true">
            <Kind type="GotoStatement"/>
            <Kind name="CaseKeyword" type="GotoCaseStatement" keyword="true"/>
            <Kind name="DefaultKeyword" type="GotoDefaultStatement" keyword="true"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
            <!--<Topology relevant="true" relevancy="1"/>-->
          </Rules>
        </Property>
        <Property name="Expression" kind="Node" index="2" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" kind="Token" index="3" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Annotations>
        <Annotation context="Suppress" role="Kind"/>
      </Annotations>
    </Type>
    <Type name="BreakStatementSyntax" base="StatementSyntax" readonly="true" hashtags="#Statement #statement">
      <Properties>
        <Property name="BreakKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="ContinueStatementSyntax" base="StatementSyntax" readonly="true" hashtags="#Statement #statement">
      <Properties>
        <Property name="ContinueKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="ReturnStatementSyntax" base="StatementSyntax" hashtags="#Statement #statement">
      <Properties>
        <Property name="ReturnKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" kind="Node" index="1" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" kind="Token" index="2" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="ThrowStatementSyntax" base="StatementSyntax" hashtags="#Statement #statement #throw">
      <Properties>
        <Property name="ThrowKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" kind="Node" index="1" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" kind="Token" index="2" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="YieldStatementSyntax" base="StatementSyntax" hashtags="#Statement #statement">
      <Properties>
        <Property name="YieldKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="ReturnOrBreakKeyword" kind="Token" index="1" readOnly="true" optional="false" changepoint="true" multiplicity="Single" keyword="true">
          <Options exclusive="true" labeling="true">
            <Kind name="ReturnKeyword" type="YieldReturnStatement" keyword="true"/>
            <Kind name="BreakKeyword" type="YieldBreakStatement" keyword="true"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" kind="Node" index="2" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" kind="Token" index="3" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Annotations>
        <Annotation context="Suppress" role="Kind"/>
      </Annotations>
    </Type>
    <Type name="WhileStatementSyntax" base="StatementSyntax" hashtags="#Statement #statement #WHILE">
      <Properties>
        <Property name="WhileKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenParenToken" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Condition" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" kind="Token" index="3" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Statement" kind="Node" index="4" optional="false" changepoint="true" multiplicity="Single">
          <Rules eventuallyCollection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="DoStatementSyntax" base="StatementSyntax" hashtags="#Statement #statement #WHILE">
      <Properties>
        <Property name="DoKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Statement" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules eventuallyCollection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="WhileKeyword" kind="Token" index="2" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenParenToken" kind="Token" index="3" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Condition" kind="Node" index="4" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" kind="Token" index="5" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" kind="Token" index="6" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <!--While compatible-->
    </Type>
    <Type name="ForStatementSyntax" base="StatementSyntax" hashtags="#Statement #statement #for">
      <Properties>
        <Property name="ForKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenParenToken" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Declaration" kind="Node" index="2" optional="true" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Initializers" kind="Node" index="3" optional="false" changepoint="true" multiplicity="Collection" collectionType="ExpressionSyntax" collectionSeparator=",">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="FirstSemicolonToken" kind="Token" index="4" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Condition" kind="Node" index="5" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SecondSemicolonToken" kind="Token" index="6" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Incrementors" kind="Node" index="7" optional="false" changepoint="true" multiplicity="Collection" collectionType="ExpressionSyntax" collectionSeparator=",">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" kind="Token" index="8" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Statement" kind="Node" index="9" optional="false" changepoint="true" multiplicity="Single">
          <Rules eventuallyCollection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="ForEachStatementSyntax" base="CommonForEachStatementSyntax" hashtags="#Statement #statement #Statement#ForEach #for">
      <Properties>
        <Property name="ForEachKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" inherited="true" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenParenToken" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" inherited="true" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Type" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" kind="Token" index="3" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="InKeyword" kind="Token" index="4" readOnly="true" optional="false" multiplicity="Single" inherited="true" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" kind="Node" index="5" optional="false" changepoint="true" multiplicity="Single" inherited="true">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" kind="Token" index="6" readOnly="true" optional="false" multiplicity="Single" inherited="true" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Statement" kind="Node" index="7" optional="false" changepoint="true" multiplicity="Single" inherited="true">
          <Rules eventuallyCollection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
      <!--for compatible-->
    </Type>
    <Type name="UsingStatementSyntax" base="StatementSyntax" hashtags="#Statement #statement">
      <Properties>
        <Property name="UsingKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenParenToken" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Declaration" kind="Node" index="2" optional="true" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Expression" kind="Node" index="3" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" kind="Token" index="4" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Statement" kind="Node" index="5" optional="false" changepoint="true" multiplicity="Single">
          <Rules eventuallyCollection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="FixedStatementSyntax" base="StatementSyntax" hashtags="#Statement #statement">
      <Properties>
        <Property name="FixedKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenParenToken" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Declaration" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" kind="Token" index="3" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Statement" kind="Node" index="4" optional="false" changepoint="true" multiplicity="Single">
          <Rules eventuallyCollection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="CheckedStatementSyntax" base="StatementSyntax" operator="true" hashtags="#Statement #statement #checked">
      <Properties>
        <Property name="Keyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Options exclusive="true" labeling="true">
            <Kind name="CheckedKeyword" type="CheckedStatement" keyword="true"/>
            <Kind name="UncheckedKeyword" type="UncheckedStatement" keyword="true"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Block" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
      <Annotations>
        <Annotation context="Suppress" role="Kind"/>
      </Annotations>
      <!--Checked expression compatible?-->
    </Type>
    <Type name="UnsafeStatementSyntax" base="StatementSyntax" hashtags="#Statement #statement">
      <Properties>
        <Property name="UnsafeKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Block" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>
    <Type name="LockStatementSyntax" base="StatementSyntax" hashtags="#Statement #statement">
      <Properties>
        <Property name="LockKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenParenToken" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" kind="Token" index="3" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Statement" kind="Node" index="4" optional="false" changepoint="true" multiplicity="Single">
          <Rules eventuallyCollection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="IfStatementSyntax" base="StatementSyntax" hashtags="#Statement #statement #if">
      <Properties>
        <Property name="IfKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenParenToken" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Condition" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" kind="Token" index="3" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Statement" kind="Node" index="4" optional="false" changepoint="true" multiplicity="Single">
          <Rules eventuallyCollection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Else" kind="Node" index="5" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <!--Conditional expression compatible-->
    </Type>
    <Type name="SwitchStatementSyntax" base="StatementSyntax" hashtags="#Statement #statement #switch">
      <Properties>
        <Property name="SwitchKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenParenToken" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" kind="Token" index="3" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenBraceToken" kind="Token" index="4" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Sections" kind="Node" index="5" optional="false" changepoint="true" multiplicity="Collection" collectionType="SwitchSectionSyntax">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseBraceToken" kind="Token" index="6" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="TryStatementSyntax" base="StatementSyntax" hashtags="#Statement #statement">
      <Properties>
        <Property name="TryKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Block" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Catches" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Collection" collectionType="CatchClauseSyntax">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Finally" kind="Node" index="3" optional="true" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <!--And Variable (by Local Declaration) Related-->
    <Type name="VariableDeclarationSyntax" hashtags="#declaration #variable #VARIABLE #DECLARATION">
      <Properties>
        <Property name="Type" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Variables" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Collection" collectionType="VariableDeclaratorSyntax" collectionSeparator=",">
          <Rules collection="true">
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true">
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="VariableDeclaratorSyntax" hashtags="#variable #declarator #VARIABLE #DECLARATION">
      <Properties>
        <Property name="Identifier" kind="Token" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ArgumentList" kind="Node" index="1" optional="true" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Initializer" kind="Node" index="2" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="EqualsValueClauseSyntax" hashtags="#VALUE#WRAPPER #clause">
      <Properties>
        <Property name="EqualsToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Value" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <!--And If Related-->
    <Type name="ElseClauseSyntax" hashtags="#IF #clause">
      <Properties>
        <Property name="ElseKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Statement" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules eventuallyCollection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="SwitchSectionSyntax" hashtags="#switch">
      <Properties>
        <Property name="Labels" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Collection" collectionType="SwitchLabelSyntax">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Statements" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Collection" collectionType="StatementSyntax">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <!--And switch Related$SwitchLabelSyntax-->
    <Type name="SwitchLabelSyntax" abstract="true">
      <Properties>
        <Property name="Keyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
        </Property>
        <Property name="ColonToken" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single">
        </Property>
      </Properties>
    </Type>
    <Type name="CaseSwitchLabelSyntax" base="SwitchLabelSyntax" hashtags="#switch #label #SWITCH#Label">
      <Properties>
        <Property name="Keyword" kind="Token" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Value" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ColonToken" kind="Token" index="2" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="DefaultSwitchLabelSyntax" base="SwitchLabelSyntax" readonly="true" hashtags="#switch #label #SWITCH#Label">
      <Properties>
        <Property name="Keyword" kind="Token" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="ColonToken" kind="Token" index="1" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <!--And Try Related$-->
    <Type name="CatchClauseSyntax" hashtags="#TRY #clause #catch">
      <Properties>
        <Property name="CatchKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Declaration" kind="Node" index="1" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Filter" kind="Node" index="2" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Block" kind="Node" index="3" optional="false" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="CatchDeclarationSyntax" hashtags="#declaration #VARIABLE#DECLARATOR #catch"><!--variable-->
      <!--declaration-->
      <Properties>
        <Property name="OpenParenToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Type" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true" priority="1"/>
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Identifier" kind="Token" index="2" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true" priority="0"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" kind="Token" index="3" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="CatchFilterClauseSyntax" hashtags="#catch #clause">
      <Properties>
        <Property name="WhenKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenParenToken" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="FilterExpression" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" kind="Token" index="3" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="FinallyClauseSyntax" hashtags="#TRY #clause">
      <Properties>
        <Property name="FinallyKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Block" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>

    <!--Member Declarations - Level 3-->
    <Type name="MemberDeclarationSyntax" abstract="true"/>
    <Type name="IncompleteMemberSyntax" base="MemberDeclarationSyntax" hashtags="#DECLARATION#Member #member">
      <Properties>
        <Property name="AttributeLists" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Collection" collectionType="AttributeListSyntax">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Collection">
          <Rules collection="true">
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="Type" kind="Node" index="2" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="GlobalStatementSyntax" base="MemberDeclarationSyntax" hashtags="#DECLARATION#Member #STATEMENT#WRAPPER #statement">
      <Properties>
        <Property name="Statement" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
          <!-- eventuallyCollection="true"?-->
        </Property>
      </Properties>
    </Type>
    <Type name="DelegateDeclarationSyntax" base="MemberDeclarationSyntax" hashtags="#declaration #DECLARATION#Member">
      <Properties>
        <Property name="AttributeLists" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Collection" collectionType="AttributeListSyntax">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Collection">
          <Rules collection="true">
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="DelegateKeyword" kind="Token" index="2" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="ReturnType" kind="Node" index="3" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" kind="Token" index="4" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="TypeParameterList" kind="Node" index="5" optional="true" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ParameterList" kind="Node" index="6" optional="false" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ConstraintClauses" kind="Node" index="7" optional="false" changepoint="true" multiplicity="Collection" collectionType="TypeParameterConstraintClauseSyntax">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" kind="Token" index="8" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Signature equality="true" absolute="true"/>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <!--Member Declarations$BaseTypeDeclarationSyntax-->
    <Type name="BaseTypeDeclarationSyntax" abstract="true" base="MemberDeclarationSyntax">
      <Properties>
        <Property name="AttributeLists" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Collection" collectionType="AttributeListSyntax">
          <Rules>
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Collection">
          <Rules>
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="Identifier" kind="Token" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
          </Rules>
        </Property>
        <Property name="BaseList" kind="Node" index="3" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="OpenBraceToken" kind="Token" index="4" readOnly="true" optional="false" multiplicity="Single">
        </Property>
        <Property name="CloseBraceToken" kind="Token" index="5" readOnly="true" optional="false" multiplicity="Single">
        </Property>
        <Property name="SemicolonToken" kind="Token" index="6" readOnly="true" optional="true" changepoint="true" multiplicity="Single">
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="EnumDeclarationSyntax" base="BaseTypeDeclarationSyntax" hashtags="#declaration #DECLARATION#Member #DECLARATION#Member#Type #enum">
      <Properties>
        <Property name="AttributeLists" kind="Node" index="0" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="AttributeListSyntax">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" kind="Node" index="1" optional="false" changepoint="true" inherited="true" multiplicity="Collection">
          <Rules collection="true">
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="EnumKeyword" kind="Token" index="2" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" kind="Token" index="3" optional="false" changepoint="true" inherited="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="BaseList" kind="Node" index="4" optional="true" changepoint="true" inherited="true" multiplicity="Single">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="OpenBraceToken" kind="Token" index="5" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Members" kind="Node" index="6" optional="false" changepoint="true" multiplicity="Collection" collectionType="EnumMemberDeclarationSyntax" collectionSeparator=",">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseBraceToken" kind="Token" index="7" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" kind="Token" index="8" readOnly="true" optional="true" changepoint="true" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <!--Member Declarations$BaseTypeDeclarationSyntax$TypeDeclarationSyntax-->
    <Type name="TypeDeclarationSyntax" abstract="true" base="BaseTypeDeclarationSyntax">
      <Properties>
        <Property name="Keyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
        </Property>
        <Property name="TypeParameterList" kind="Node" index="1" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ConstraintClauses" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Collection" collectionType="TypeParameterConstraintClauseSyntax">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Members" kind="Node" index="3" optional="false" changepoint="true" multiplicity="Collection" collectionType="MemberDeclarationSyntax">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Signature equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="ClassDeclarationSyntax" base="TypeDeclarationSyntax" hashtags="#declaration #DECLARATION#Member#Type #DECLARATION#Member">
      <Properties>
        <Property name="AttributeLists" kind="Node" index="0" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="AttributeListSyntax">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" kind="Node" index="1" optional="false" changepoint="true" inherited="true" multiplicity="Collection">
          <Rules collection="true">
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="Keyword" kind="Token" index="2" readOnly="true" optional="false" inherited="true" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" kind="Token" index="3" optional="false" changepoint="true" inherited="true" multiplicity="Single">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="TypeParameterList" kind="Node" index="4" optional="true" changepoint="true" inherited="true" multiplicity="Single">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="BaseList" kind="Node" index="5" optional="true" changepoint="true" inherited="true" multiplicity="Single">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ConstraintClauses" kind="Node" index="6" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="TypeParameterConstraintClauseSyntax">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="OpenBraceToken" kind="Token" index="7" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Members" kind="Node" index="8" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="MemberDeclarationSyntax">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseBraceToken" kind="Token" index="9" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" kind="Token" index="10" readOnly="true" optional="true" changepoint="true" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Signature equality="true" absolute="true"/>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="StructDeclarationSyntax" base="TypeDeclarationSyntax" hashtags="#declaration #DECLARATION#Member#Type #DECLARATION#Member">
      <Properties>
        <Property name="AttributeLists" kind="Node" index="0" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="AttributeListSyntax">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" kind="Node" index="1" optional="false" changepoint="true" inherited="true" multiplicity="Collection">
          <Rules collection="true">
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="Keyword" kind="Token" index="2" readOnly="true" optional="false" inherited="true" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" kind="Token" index="3" optional="false" changepoint="true" inherited="true" multiplicity="Single">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="TypeParameterList" kind="Node" index="4" optional="true" changepoint="true" inherited="true" multiplicity="Single">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="BaseList" kind="Node" index="5" optional="true" changepoint="true" inherited="true" multiplicity="Single">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ConstraintClauses" kind="Node" index="6" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="TypeParameterConstraintClauseSyntax">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="OpenBraceToken" kind="Token" index="7" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Members" kind="Node" index="8" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="MemberDeclarationSyntax">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseBraceToken" kind="Token" index="9" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" kind="Token" index="10" readOnly="true" optional="true" changepoint="true" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Signature equality="true" absolute="true"/>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="InterfaceDeclarationSyntax" base="TypeDeclarationSyntax" hashtags="#declaration #DECLARATION#Member#Type #DECLARATION#Member">
      <Properties>
        <Property name="AttributeLists" kind="Node" index="0" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="AttributeListSyntax">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" kind="Node" index="1" optional="false" changepoint="true" inherited="true" multiplicity="Collection">
          <Rules collection="true">
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="Keyword" kind="Token" index="2" readOnly="true" optional="false" inherited="true" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" kind="Token" index="3" optional="false" changepoint="true" inherited="true" multiplicity="Single">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="TypeParameterList" kind="Node" index="4" optional="true" changepoint="true" inherited="true" multiplicity="Single">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="BaseList" kind="Node" index="5" optional="true" changepoint="true" inherited="true" multiplicity="Single">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ConstraintClauses" kind="Node" index="6" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="TypeParameterConstraintClauseSyntax">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="OpenBraceToken" kind="Token" index="7" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Members" kind="Node" index="8" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="MemberDeclarationSyntax">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseBraceToken" kind="Token" index="9" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" kind="Token" index="10" readOnly="true" optional="true" changepoint="true" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Signature equality="true" absolute="true"/>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <!--And Related-->
    <Type name="EnumMemberDeclarationSyntax" base="MemberDeclarationSyntax" hashtags="#declaration #DECLARATION#Member #member #enum#member">
      <Properties>
        <Property name="AttributeLists" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Collection" collectionType="AttributeListSyntax">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Identifier" kind="Token" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EqualsValue" kind="Node" index="2" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <!--And Related$TypeParameterListSyntax-->
    <Type name="TypeParameterListSyntax" hashtags="#list #type #type#parameter #parameter">
      <Properties>
        <Property name="LessThanToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Parameters" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Collection" collectionType="TypeParameterSyntax" collectionSeparator=",">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <!--<Name equality="true" absolute="true"/>-->
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="GreaterThanToken" kind="Token" index="2" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>
    <Type name="TypeParameterSyntax" hashtags="#type #type#parameter #parameter #DECLARATION">
      <Properties>
        <Property name="AttributeLists" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Collection" collectionType="AttributeListSyntax">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="VarianceKeyword" kind="Token" index="1" optional="true" changepoint="true" multiplicity="Single" keyword="true">
          <Options exclusive="true">
            <Kind name="InKeyword" keyword="true"/>
            <Kind name="OutKeyword" keyword="true"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" kind="Token" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="TypeParameterConstraintClauseSyntax" hashtags="#Type#Parameter#Constraint #clause #type #type#parameter #parameter #constraint">
      <Properties>
        <Property name="WhereKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Name" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ColonToken" kind="Token" index="2" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Constraints" kind="Node" index="3" optional="false" changepoint="true" multiplicity="Collection" collectionType="TypeParameterConstraintSyntax" collectionSeparator=",">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <!--And Related$TypeParameterConstraintSyntax-->
    <Type name="TypeParameterConstraintSyntax" abstract="true"/>
    <Type name="TypeConstraintSyntax" base="TypeParameterConstraintSyntax" hashtags="#Type#Parameter#Constraint #type #constraint">
      <Properties>
        <Property name="Type" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="ConstructorConstraintSyntax" base="TypeParameterConstraintSyntax" readonly="true" hashtags="#Type#Parameter#Constraint #constructor #constraint">
      <Properties>
        <Property name="NewKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenParenToken" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" kind="Token" index="2" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="ClassOrStructConstraintSyntax" base="TypeParameterConstraintSyntax" readonly="true" hashtags="#Type#Parameter#Constraint #constraint">
      <Properties>
        <Property name="ClassOrStructKeyword" kind="Token" index="0" readOnly="true" optional="false" changepoint="true" multiplicity="Single" keyword="true">
          <Options exclusive="true" labeling="true">
            <Kind name="ClassKeyword" type="ClassConstraint" keyword="true"/>
            <Kind name="StructKeyword" type="StructConstraint" keyword="true"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Annotations>
        <Annotation context="Suppress" role="Kind"/>
      </Annotations>
    </Type>
    <!--And Related$BaseTypeSyntax-->
    <Type name="BaseListSyntax" hashtags="#list #base #TYPE#BASE"><!--BaseTypeList-->
      <Properties>
        <Property name="ColonToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Types" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Collection" collectionType="BaseTypeSyntax" collectionSeparator=",">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>
    <Type name="BaseTypeSyntax" abstract="true">
      <Properties>
        <Property name="Type" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="SimpleBaseTypeSyntax" base="BaseTypeSyntax" hashtags="#type #base #TYPE#BASE">
      <Properties>
        <Property name="Type" kind="Node" index="0" optional="false" changepoint="true" inherited="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <!--And Related$BaseFieldDeclarationSyntax-->
    <Type name="BaseFieldDeclarationSyntax" abstract="true" base="MemberDeclarationSyntax">
      <Properties>
        <Property name="AttributeLists" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Collection" collectionType="AttributeListSyntax">
          <Rules>
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Collection">
          <Rules>
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="Declaration" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" kind="Token" index="3" readOnly="true" optional="false" multiplicity="Single">
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="FieldDeclarationSyntax" base="BaseFieldDeclarationSyntax" hashtags="#declaration #DECLARATION#Member#Field #DECLARATION#Member">
      <Properties>
        <Property name="AttributeLists" kind="Node" index="0" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="AttributeListSyntax">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" kind="Node" index="1" optional="false" changepoint="true" inherited="true" multiplicity="Collection">
          <Rules collection="true">
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="Declaration" kind="Node" index="2" optional="false" changepoint="true" inherited="true" multiplicity="Single">
          <Rules collection="true">
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" kind="Token" index="3" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="EventFieldDeclarationSyntax" base="BaseFieldDeclarationSyntax" hashtags="#declaration #DECLARATION#Member#Field #event #DECLARATION#Member">
      <Properties>
        <Property name="AttributeLists" kind="Node" index="0" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="AttributeListSyntax">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" kind="Node" index="1" optional="false" changepoint="true" inherited="true" multiplicity="Collection">
          <Rules collection="true">
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="EventKeyword" kind="Token" index="2" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Declaration" kind="Node" index="3" optional="false" changepoint="true" inherited="true" multiplicity="Single">
          <Rules collection="true">
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" kind="Token" index="4" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <!--And Related-->
    <Type name="ExplicitInterfaceSpecifierSyntax" hashtags="#specifier">
      <Properties>
        <Property name="Name" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="DotToken" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <!--And Related$BaseMethodDeclarationSyntax-->
    <Type name="BaseMethodDeclarationSyntax" abstract="true" base="MemberDeclarationSyntax">
      <Properties>
        <Property name="AttributeLists" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Collection" collectionType="AttributeListSyntax">
        </Property>
        <Property name="Modifiers" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Collection">
        </Property>
        <Property name="ParameterList" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Signature equality="true" absolute="true"/>
          </Rules>
        </Property>
        <Property name="Body" kind="Node" index="3" optional="true" changepoint="true" multiplicity="Single">
        </Property>
        <Property name="SemicolonToken" kind="Token" index="4" optional="true" changepoint="true" multiplicity="Single">
        </Property>
      </Properties>
      <Rules>
        <Signature equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="MethodDeclarationSyntax" base="BaseMethodDeclarationSyntax" hashtags="#declaration #DECLARATION#Member #DECLARATION#Member#Method">
      <Properties>
        <Property name="AttributeLists" kind="Node" index="0" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="AttributeListSyntax">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" kind="Node" index="1" optional="false" changepoint="true" inherited="true" multiplicity="Collection">
          <Rules collection="true">
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="ReturnType" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ExplicitInterfaceSpecifier" kind="Node" index="3" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" kind="Token" index="4" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="TypeParameterList" kind="Node" index="5" optional="true" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ParameterList" kind="Node" index="6" optional="false" changepoint="true" inherited="true" multiplicity="Single">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ConstraintClauses" kind="Node" index="7" optional="false" changepoint="true" multiplicity="Collection" collectionType="TypeParameterConstraintClauseSyntax">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Body" kind="Node" index="8" optional="true" changepoint="true" inherited="true" multiplicity="Single">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ExpressionBody" kind="Node" index="9" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" kind="Token" index="10" readOnly="true" optional="true" changepoint="true" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Signature equality="true" absolute="true"/>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="OperatorDeclarationSyntax" base="BaseMethodDeclarationSyntax" hashtags="#declaration #operator #DECLARATION#Member #DECLARATION#Member#Method">
      <Properties>
        <Property name="AttributeLists" kind="Node" index="0" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="AttributeListSyntax">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" kind="Node" index="1" optional="false" changepoint="true" inherited="true" multiplicity="Collection">
          <Rules collection="true">
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="ReturnType" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="OperatorKeyword" kind="Token" index="3" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OperatorToken" kind="Token" index="4" readOnly="true" optional="false" changepoint="true" multiplicity="Single">
          <Options exclusive="true">
            <Kind name="PlusToken" operator="true"/>
            <Kind name="MinusToken" operator="true"/>
            <Kind name="ExclamationToken" operator="true"/>
            <Kind name="TildeToken" operator="true"/>
            <Kind name="PlusPlusToken" operator="true"/>
            <Kind name="MinusMinusToken" operator="true"/>
            <Kind name="AsteriskToken" operator="true"/>
            <Kind name="SlashToken" operator="true"/>
            <Kind name="PercentToken" operator="true"/>
            <Kind name="LessThanLessThanToken" operator="true"/>
            <Kind name="GreaterThanGreaterThanToken" operator="true"/>
            <Kind name="BarToken" operator="true"/>
            <Kind name="AmpersandToken" operator="true"/>
            <Kind name="CaretToken" operator="true"/>
            <Kind name="EqualsEqualsToken" operator="true"/>
            <Kind name="ExclamationEqualsToken" operator="true"/>
            <Kind name="LessThanToken" operator="true"/>
            <Kind name="LessThanEqualsToken" operator="true"/>
            <Kind name="GreaterThanToken" operator="true"/>
            <Kind name="GreaterThanEqualsToken" operator="true"/>
            <Kind name="FalseKeyword" operator="true" keyword="true"/>
            <Kind name="TrueKeyword" operator="true" keyword="true"/>
            <Kind name="IsKeyword" operator="true" keyword="true"/>
          </Options>
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ParameterList" kind="Node" index="5" optional="false" changepoint="true" inherited="true" multiplicity="Single">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Body" kind="Node" index="6" optional="true" changepoint="true" inherited="true" multiplicity="Single">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ExpressionBody" kind="Node" index="7" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" kind="Token" index="8" readOnly="true" optional="true" changepoint="true" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Signature equality="true" absolute="true"/>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="ConversionOperatorDeclarationSyntax" base="BaseMethodDeclarationSyntax" hashtags="#declaration #operator #DECLARATION#Member #DECLARATION#Member#Method #conversion">
      <Properties>
        <Property name="AttributeLists" kind="Node" index="0" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="AttributeListSyntax">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" kind="Node" index="1" optional="false" changepoint="true" inherited="true" multiplicity="Collection">
          <Rules collection="true">
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="ImplicitOrExplicitKeyword" kind="Token" index="2" optional="false" changepoint="true" multiplicity="Single" keyword="true">
          <Options exclusive="true">
            <Kind name="ImplicitKeyword" keyword="true"/>
            <Kind name="ExplicitKeyword" keyword="true"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OperatorKeyword" kind="Token" index="3" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Type" kind="Node" index="4" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <!--<Name equality="true" absolute="true"/>-->
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ParameterList" kind="Node" index="5" optional="false" changepoint="true" inherited="true" multiplicity="Single">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Body" kind="Node" index="6" optional="true" changepoint="true" inherited="true" multiplicity="Single">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ExpressionBody" kind="Node" index="7" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" kind="Token" index="8" readOnly="true" optional="true" changepoint="true" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Signature equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="ConstructorDeclarationSyntax" base="BaseMethodDeclarationSyntax" hashtags="#declaration #constructor #DECLARATION#Member #DECLARATION#Member#Method">
      <Properties>
        <Property name="AttributeLists" kind="Node" index="0" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="AttributeListSyntax">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" kind="Node" index="1" optional="false" changepoint="true" inherited="true" multiplicity="Collection">
          <Rules collection="true">
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="Identifier" kind="Token" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ParameterList" kind="Node" index="3" optional="false" changepoint="true" inherited="true" multiplicity="Single">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Initializer" kind="Node" index="4" optional="true" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Body" kind="Node" index="5" optional="true" changepoint="true" inherited="true" multiplicity="Single">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" kind="Token" index="6" readOnly="true" optional="true" changepoint="true" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Signature equality="true" absolute="true"/>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="ConstructorInitializerSyntax" hashtags="#constructor #initializer">
      <Properties>
        <Property name="ColonToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="ThisOrBaseKeyword" kind="Token" index="1" readOnly="true" optional="false" changepoint="true" multiplicity="Single" keyword="true">
          <Options exclusive="true" labeling="true">
            <Kind name="BaseKeyword" type="BaseConstructorInitializer" keyword="true"/>
            <Kind name="ThisKeyword" type="ThisConstructorInitializer" keyword="true"/>
          </Options>
          <Rules>
            <Signature equality="true" absolute="true"/>
            <!--<Name equality="true" absolute="true"/> It can be identified by the kind-->
            <Pairwise tunneling="true"/>
            <!--<Topology relevant="true"/>-->
            <!--should be this property a key or priorized pairwise change detection?-->
          </Rules>
        </Property>
        <Property name="ArgumentList" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <!--<Name equality="true" absolute="true"/>-->
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
      <Annotations>
        <Annotation context="Suppress" role="Kind"/>
      </Annotations>
    </Type>
    <Type name="DestructorDeclarationSyntax" base="BaseMethodDeclarationSyntax" hashtags="#declaration #DECLARATION#Member #DECLARATION#Member#Method">
      <Properties>
        <Property name="AttributeLists" kind="Node" index="0" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="AttributeListSyntax">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" kind="Node" index="1" readOnly="true" optional="false" inherited="true" multiplicity="Collection">
          <Rules collection="true">
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="TildeToken" kind="Token" index="2" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" kind="Token" index="3" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ParameterList" kind="Node" index="4" readOnly="true" optional="false" inherited="true" multiplicity="Single">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Body" kind="Node" index="6" optional="true" changepoint="true" inherited="true" multiplicity="Single">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" kind="Token" index="7" readOnly="true" optional="true" changepoint="true" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <!--And Related$BasePropertyDeclarationSyntax-->
    <Type name="BasePropertyDeclarationSyntax" abstract="true" base="MemberDeclarationSyntax">
      <Properties>
        <Property name="AttributeLists" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Collection" collectionType="AttributeListSyntax">
        </Property>
        <Property name="Modifiers" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Collection">
        </Property>
        <Property name="Type" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
        </Property>
        <Property name="ExplicitInterfaceSpecifier" kind="Node" index="3" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
          </Rules>
        </Property>
        <Property name="AccessorList" kind="Node" index="4" optional="false" changepoint="true" multiplicity="Single">
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="PropertyDeclarationSyntax" base="BasePropertyDeclarationSyntax" hashtags="#declaration #DECLARATION#Member#Property #DECLARATION#Member">
      <Properties>
        <Property name="AttributeLists" kind="Node" index="0" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="AttributeListSyntax">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" kind="Node" index="1" optional="false" changepoint="true" inherited="true" multiplicity="Collection">
          <Rules collection="true">
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="Type" kind="Node" index="2" optional="false" changepoint="true" inherited="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ExplicitInterfaceSpecifier" kind="Node" index="3" optional="true" changepoint="true" inherited="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" kind="Token" index="4" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="AccessorList" kind="Node" index="5" optional="true" changepoint="true" inherited="true" multiplicity="Single">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ExpressionBody" kind="Node" index="6" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Initializer" kind="Node" index="7" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" kind="Token" index="8" readOnly="true" optional="true" changepoint="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="ArrowExpressionClauseSyntax" hashtags="#expression #VALUE#WRAPPER #clause">
      <Properties>
        <Property name="ArrowToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="EventDeclarationSyntax" base="BasePropertyDeclarationSyntax" hashtags="#declaration #DECLARATION#Member#Property #event #DECLARATION#Member">
      <Properties>
        <Property name="AttributeLists" kind="Node" index="0" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="AttributeListSyntax">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" kind="Node" index="1" optional="false" changepoint="true" inherited="true" multiplicity="Collection">
          <Rules collection="true">
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="EventKeyword" kind="Token" index="2" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Type" kind="Node" index="3" optional="false" changepoint="true" inherited="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ExplicitInterfaceSpecifier" kind="Node" index="4" optional="true" changepoint="true" inherited="true" multiplicity="Single">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" kind="Token" index="5" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="AccessorList" kind="Node" index="6" optional="false" changepoint="true" inherited="true" multiplicity="Single">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Signature equality="true" absolute="true"/>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="IndexerDeclarationSyntax" base="BasePropertyDeclarationSyntax" hashtags="#declaration #DECLARATION#Member#Property #DECLARATION#Member #indexer">
      <Properties>
        <Property name="AttributeLists" kind="Node" index="0" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="AttributeListSyntax">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" kind="Node" index="1" optional="false" changepoint="true" inherited="true" multiplicity="Collection">
          <Rules collection="true">
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="Type" kind="Node" index="2" optional="false" changepoint="true" inherited="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ExplicitInterfaceSpecifier" kind="Node" index="3" optional="true" changepoint="true" inherited="true" multiplicity="Single">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ThisKeyword" kind="Token" index="4" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="ParameterList" kind="Node" index="5" optional="false" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="AccessorList" kind="Node" index="6" optional="true" changepoint="true" inherited="true" multiplicity="Single">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ExpressionBody" kind="Node" index="6" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" kind="Token" index="7" readOnly="true" optional="true" changepoint="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Signature equality="true" absolute="true"/>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="AccessorListSyntax" hashtags="#list #accessor">
      <Properties>
        <Property name="OpenBraceToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Accessors" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Collection" collectionType="AccessorDeclarationSyntax">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseBraceToken" kind="Token" index="2" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>
    <Type name="AccessorDeclarationSyntax" hashtags="#declaration #DECLARATION #accessor">
      <Properties>
        <Property name="AttributeLists" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Collection" collectionType="AttributeListSyntax">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Collection">
          <Rules collection="true">
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="Keyword" kind="Token" index="2" readOnly="true" optional="false" changepoint="true" multiplicity="Single" keyword="true">
          <Options exclusive="true" labeling="true">
            <Kind name="GetKeyword" type="GetAccessorDeclaration" keyword="true"/>
            <Kind name="SetKeyword" type="SetAccessorDeclaration" keyword="true"/>
            <Kind name="AddKeyword" type="AddAccessorDeclaration" keyword="true"/>
            <Kind name="RemoveKeyword" type="RemoveAccessorDeclaration" keyword="true"/>
            <Kind name="IdentifierToken" type="UnknownAccessorDeclaration" identifier="true" readonly="false"/>
          </Options>
          <Rules>
            <!--<Name equality="true" absolute="true"/> It can be identified by the kind--> 
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Body" kind="Node" index="3" optional="true" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" kind="Token" index="4" readOnly="true" optional="true" changepoint="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Annotations>
        <Annotation context="Suppress" role="Kind"/>
      </Annotations>
    </Type>
    <!--And Related$BaseParameterListSyntax-->
    <Type name="BaseParameterListSyntax" abstract="true">
      <Properties>
        <Property name="Parameters" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Collection" collectionType="ParameterSyntax" collectionSeparator=",">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Signature equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="ParameterListSyntax" base="BaseParameterListSyntax" hashtags="#LIST#Parameter #list #parameter">
      <Properties>
        <Property name="OpenParenToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Parameters" kind="Node" index="1" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="ParameterSyntax" collectionSeparator=",">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" kind="Token" index="2" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true">
        <Signature equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="BracketedParameterListSyntax" base="BaseParameterListSyntax" hashtags="#LIST#Parameter #list #parameter #bracketed">
      <Properties>
        <Property name="OpenBracketToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Parameters" kind="Node" index="1" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="ParameterSyntax" collectionSeparator=",">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseBracketToken" kind="Token" index="2" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true">
        <Signature equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="ParameterSyntax" hashtags="#parameter #DECLARATION">
      <Properties>
        <Property name="AttributeLists" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Collection" collectionType="AttributeListSyntax">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Collection">
          <Rules collection="true">
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="Type" kind="Node" index="2" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" kind="Token" index="3" optional="false" changepoint="true" multiplicity="Single">
          <Options exclusive="true">
            <Kind name="IdentifierToken" identifier="true" readonly="false"/>
            <Kind name="ArgListKeyword" keyword="true"/>
          </Options>
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Default" kind="Node" index="4" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Signature equality="true" absolute="true"/>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>

    <!--StructuredTriviaSyntax-->
    <Type name="StructuredTriviaSyntax" abstract="true"/>
    <Type name="SkippedTokensTriviaSyntax" base="StructuredTriviaSyntax" hashtags="#TRIVIA#Structured #trivia">
      <Properties>
        <Property name="Tokens" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Collection">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>
    <Type name="DocumentationCommentTriviaSyntax" base="StructuredTriviaSyntax" hashtags="#TRIVIA#Structured #trivia #comment">
      <Properties>
        <Property name="Content" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Collection" collectionType="XmlNodeSyntax">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EndOfComment" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Options exclusive="true">
        <Type name="SingleLineDocumentationCommentTrivia"/>
        <Type name="MultiLineDocumentationCommentTrivia"/>
      </Options>
      <Rules collection="true"/>
      <Annotations>
        <Annotation context="Suppress" role="Kind"/>
      </Annotations>
    </Type>
    <!--StructuredTriviaSyntax$DirectiveTriviaSyntax-->
    <Type name="DirectiveTriviaSyntax" abstract="true" base="StructuredTriviaSyntax" readonly="true">
      <Properties>
        <Property name="HashToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single">
        </Property>
        <Property name="EndOfDirectiveToken" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single">
        </Property>
      </Properties>
    </Type>
    <Type name="EndIfDirectiveTriviaSyntax" base="DirectiveTriviaSyntax" readonly="true" hashtags="#TRIVIA#Structured #trivia #directive #TRIVIA#Structured#Directive #if #end">
      <Properties>
        <Property name="HashToken" kind="Token" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="EndIfKeyword" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="EndOfDirectiveToken" kind="Token" index="2" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="RegionDirectiveTriviaSyntax" base="DirectiveTriviaSyntax" readonly="true" hashtags="#TRIVIA#Structured #trivia #directive #TRIVIA#Structured#Directive #region">
      <Properties>
        <Property name="HashToken" kind="Token" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="RegionKeyword" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="EndOfDirectiveToken" kind="Token" index="2" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="EndRegionDirectiveTriviaSyntax" base="DirectiveTriviaSyntax" readonly="true" hashtags="#TRIVIA#Structured #trivia #directive #TRIVIA#Structured#Directive #end #region">
      <Properties>
        <Property name="HashToken" kind="Token" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="EndRegionKeyword" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="EndOfDirectiveToken" kind="Token" index="2" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="ErrorDirectiveTriviaSyntax" base="DirectiveTriviaSyntax" readonly="true" hashtags="#TRIVIA#Structured #trivia #directive #TRIVIA#Structured#Directive">
      <Properties>
        <Property name="HashToken" kind="Token" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="ErrorKeyword" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="EndOfDirectiveToken" kind="Token" index="2" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="WarningDirectiveTriviaSyntax" base="DirectiveTriviaSyntax" readonly="true" hashtags="#TRIVIA#Structured #trivia #directive #TRIVIA#Structured#Directive #warning">
      <Properties>
        <Property name="HashToken" kind="Token" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="WarningKeyword" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="EndOfDirectiveToken" kind="Token" index="2" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="BadDirectiveTriviaSyntax" base="DirectiveTriviaSyntax" hashtags="#TRIVIA#Structured #trivia #directive #TRIVIA#Structured#Directive">
      <Properties>
        <Property name="HashToken" kind="Token" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" kind="Token" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EndOfDirectiveToken" kind="Token" index="2" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="DefineDirectiveTriviaSyntax" base="DirectiveTriviaSyntax" hashtags="#TRIVIA#Structured #trivia #directive #TRIVIA#Structured#Directive">
      <Properties>
        <Property name="HashToken" kind="Token" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="DefineKeyword" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Name" kind="Token" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EndOfDirectiveToken" kind="Token" index="3" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="UndefDirectiveTriviaSyntax" base="DirectiveTriviaSyntax" hashtags="#TRIVIA#Structured #trivia #directive #TRIVIA#Structured#Directive">
      <Properties>
        <Property name="HashToken" kind="Token" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="UndefKeyword" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Name" kind="Token" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EndOfDirectiveToken" kind="Token" index="3" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="LineDirectiveTriviaSyntax" base="DirectiveTriviaSyntax" hashtags="#TRIVIA#Structured #trivia #directive #TRIVIA#Structured#Directive">
      <Properties>
        <Property name="HashToken" kind="Token" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="LineKeyword" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Line" kind="Token" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Options exclusive="true">
            <Kind name="NumericLiteralToken" literal="true" readonly="false"/>
            <Kind name="DefaultKeyword" keyword="true"/>
            <Kind name="HiddenKeyword" keyword="true"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="File" kind="Token" index="3" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EndOfDirectiveToken" kind="Token" index="4" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="PragmaWarningDirectiveTriviaSyntax" base="DirectiveTriviaSyntax" hashtags="#TRIVIA#Structured #trivia #directive #TRIVIA#Structured#Directive #warning #pragma">
      <Properties>
        <Property name="HashToken" kind="Token" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="PragmaKeyword" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="WarningKeyword" kind="Token" index="2" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="DisableOrRestoreKeyword" kind="Token" index="3" optional="false" changepoint="true" multiplicity="Single" keyword="true">
          <Options exclusive="true">
            <Kind name="DisableKeyword" keyword="true"/>
            <Kind name="RestoreKeyword" keyword="true"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ErrorCodes" kind="Node" index="4" optional="false" changepoint="true" multiplicity="Collection" collectionType="ExpressionSyntax" collectionSeparator=",">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EndOfDirectiveToken" kind="Token" index="5" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>
    <Type name="PragmaChecksumDirectiveTriviaSyntax" base="DirectiveTriviaSyntax" hashtags="#TRIVIA#Structured #trivia #directive #TRIVIA#Structured#Directive #pragma">
      <Properties>
        <Property name="HashToken" kind="Token" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="PragmaKeyword" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="ChecksumKeyword" kind="Token" index="2" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="File" kind="Token" index="3" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Guid" kind="Token" index="4" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Bytes" kind="Token" index="5" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EndOfDirectiveToken" kind="Token" index="6" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="ReferenceDirectiveTriviaSyntax" base="DirectiveTriviaSyntax" hashtags="#TRIVIA#Structured #trivia #directive #TRIVIA#Structured#Directive">
      <Properties>
        <Property name="HashToken" kind="Token" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="ReferenceKeyword" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="File" kind="Token" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EndOfDirectiveToken" kind="Token" index="3" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="LoadDirectiveTriviaSyntax" base="DirectiveTriviaSyntax" hashtags="#TRIVIA#Structured #trivia #directive #TRIVIA#Structured#Directive">
      <Properties>
        <Property name="HashToken" kind="Token" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="LoadKeyword" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="File" kind="Token" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EndOfDirectiveToken" kind="Token" index="3" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="ShebangDirectiveTriviaSyntax" base="DirectiveTriviaSyntax" readonly="true" hashtags="#TRIVIA#Structured #trivia #directive #TRIVIA#Structured#Directive">
      <Properties>
        <Property name="HashToken" kind="Token" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="ExclamationToken" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="EndOfDirectiveToken" kind="Token" index="2" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <!--StructuredTriviaSyntax$DirectiveTriviaSyntax$BranchingDirectiveTriviaSyntax-->
    <Type name="BranchingDirectiveTriviaSyntax" abstract="true" base="DirectiveTriviaSyntax"/>
    <Type name="ElseDirectiveTriviaSyntax" base="BranchingDirectiveTriviaSyntax" readonly="true" hashtags="#TRIVIA#Structured #trivia #directive #TRIVIA#Structured#Directive#Branching #TRIVIA#Structured#Directive">
      <Properties>
        <Property name="HashToken" kind="Token" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="ElseKeyword" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="EndOfDirectiveToken" kind="Token" index="2" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <!--StructuredTriviaSyntax$DirectiveTriviaSyntax$BranchingDirectiveTriviaSyntax$ConditionalDirectiveTriviaSyntax-->
    <Type name="ConditionalDirectiveTriviaSyntax" abstract="true" base="BranchingDirectiveTriviaSyntax">
      <Properties>
        <Property name="Condition" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="IfDirectiveTriviaSyntax" base="ConditionalDirectiveTriviaSyntax" hashtags="#TRIVIA#Structured #trivia #directive #TRIVIA#Structured#Directive#Branching #TRIVIA#Structured#Directive#Branching#Conditional #TRIVIA#Structured#Directive #if">
      <Properties>
        <Property name="HashToken" kind="Token" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="IfKeyword" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Condition" kind="Node" index="2" optional="false" changepoint="true" inherited="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EndOfDirectiveToken" kind="Token" index="3" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="ElifDirectiveTriviaSyntax" base="ConditionalDirectiveTriviaSyntax" hashtags="#trivia #directive #TRIVIA#Structured#Directive#Branching #TRIVIA#Structured#Directive#Branching#Conditional #TRIVIA#Structured#Directive">
      <Properties>
        <Property name="HashToken" kind="Token" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="ElifKeyword" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Condition" kind="Node" index="2" optional="false" changepoint="true" inherited="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EndOfDirectiveToken" kind="Token" index="3" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>


    <!--An Related-->
    <!--An Related$CrefSyntax-->
    <Type name="CrefSyntax" abstract="true"/>
    <Type name="TypeCrefSyntax" base="CrefSyntax" hashtags="#cref #DECLARATION#MEMBER#TYPE #Cref #type">
      <Properties>
        <Property name="Type" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="QualifiedCrefSyntax" base="CrefSyntax" hashtags="#cref #qualified #Cref">
      <Properties>
        <Property name="Container" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="DotToken" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Member" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="MemberCrefSyntax" abstract="true" base="CrefSyntax"/>
    <Type name="NameMemberCrefSyntax" base="MemberCrefSyntax" hashtags="#cref #Cref#Member #DECLARATION#MEMBER #Cref #name #member">
      <Properties>
        <Property name="Name" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Parameters" kind="Node" index="1" optional="true" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Signature equality="true" absolute="true"/>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="IndexerMemberCrefSyntax" base="MemberCrefSyntax" hashtags="#Cref #Cref#Member #cref #member #indexer">
      <Properties>
        <Property name="ThisKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Parameters" kind="Node" index="1" optional="true" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true">
        <Signature equality="true" absolute="true"/>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="OperatorMemberCrefSyntax" base="MemberCrefSyntax" hashtags="#Cref #Cref#Member #cref #member #operator ">
      <Properties>
        <Property name="OperatorKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OperatorToken" kind="Token" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Options exclusive="true">
            <Kind name="PlusToken" operator="true"/>
            <Kind name="MinusToken" operator="true"/>
            <Kind name="ExclamationToken" operator="true"/>
            <Kind name="TildeToken" operator="true"/>
            <Kind name="PlusPlusToken" operator="true"/>
            <Kind name="MinusMinusToken" operator="true"/>
            <Kind name="AsteriskToken" operator="true"/>
            <Kind name="SlashToken" operator="true"/>
            <Kind name="PercentToken" operator="true"/>
            <Kind name="LessThanLessThanToken" operator="true"/>
            <Kind name="GreaterThanGreaterThanToken" operator="true"/>
            <Kind name="BarToken" operator="true"/>
            <Kind name="AmpersandToken" operator="true"/>
            <Kind name="CaretToken" operator="true"/>
            <Kind name="EqualsEqualsToken" operator="true"/>
            <Kind name="ExclamationEqualsToken" operator="true"/>
            <Kind name="LessThanToken" operator="true"/>
            <Kind name="LessThanEqualsToken" operator="true"/>
            <Kind name="GreaterThanToken" operator="true"/>
            <Kind name="GreaterThanEqualsToken" operator="true"/>
            <Kind name="FalseKeyword" operator="true" keyword="true"/>
            <Kind name="TrueKeyword" operator="true" keyword="true"/>
          </Options>
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Parameters" kind="Node" index="2" optional="true" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Signature equality="true" absolute="true"/>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="ConversionOperatorMemberCrefSyntax" base="MemberCrefSyntax" hashtags="#Cref #Cref#Member #cref #member #operator #conversion">
      <Properties>
        <Property name="ImplicitOrExplicitKeyword" kind="Token" index="0" optional="false" changepoint="true" multiplicity="Single" keyword="true">
          <Options exclusive="true">
            <Kind name="ImplicitKeyword" keyword="true"/>
            <Kind name="ExplicitKeyword" keyword="true"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OperatorKeyword" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Type" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Parameters" kind="Node" index="3" optional="true" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Signature equality="true" absolute="true"/>
      </Rules>
    </Type>
    <!--An Related$BaseCrefParameterListSyntax-->
    <Type name="BaseCrefParameterListSyntax" abstract="true">
      <Properties>
        <Property name="Parameters" kind="Node" index="0" optional="false" multiplicity="Collection" collectionType="CrefParameterSyntax" collectionSeparator=",">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true">
        <Signature equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="CrefParameterListSyntax" base="BaseCrefParameterListSyntax" hashtags="#LIST#CrefParameter #parameter #list #cref">
      <Properties>
        <Property name="OpenParenToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Parameters" kind="Node" index="1" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="CrefParameterSyntax" collectionSeparator=",">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" kind="Token" index="2" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true">
        <Signature equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="CrefBracketedParameterListSyntax" base="BaseCrefParameterListSyntax" hashtags="#LIST#CrefParameter #parameter #list #cref #bracketed">
      <Properties>
        <Property name="OpenBracketToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Parameters" kind="Node" index="1" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="CrefParameterSyntax" collectionSeparator=",">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseBracketToken" kind="Token" index="2" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true">
        <Signature equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="CrefParameterSyntax" hashtags="#cref #parameter">
      <Properties>
        <Property name="RefKindKeyword" kind="Token" index="0" optional="true" changepoint="true" multiplicity="Single" keyword="true">
          <Options exclusive="true">
            <Kind name="RefKeyword" keyword="true"/>
            <Kind name="OutKeyword" keyword="true"/>
            <Kind name="InKeyword" keyword="true"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Type" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <!--An Related$XmlNodeSyntax-->
    <Type name="XmlNodeSyntax" abstract="true"/>
    <Type name="XmlElementSyntax" base="XmlNodeSyntax" hashtags="#xml #XML#Node #element">
      <Properties>
        <Property name="StartTag" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Content" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Collection" collectionType="XmlNodeSyntax">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EndTag" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="XmlElementStartTagSyntax" hashtags="#xml #tag #element">
      <Properties>
        <Property name="LessThanToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Name" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Attributes" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Collection" collectionType="XmlAttributeSyntax">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="GreaterThanToken" kind="Token" index="3" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="XmlElementEndTagSyntax" hashtags="#xml #tag #element #end">
      <Properties>
        <Property name="LessThanSlashToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Name" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="GreaterThanToken" kind="Token" index="3" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="XmlEmptyElementSyntax" base="XmlNodeSyntax" hashtags="#xml #XML#Node #element">
      <Properties>
        <Property name="LessThanToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Name" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Attributes" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Collection" collectionType="XmlAttributeSyntax">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SlashGreaterThanToken" kind="Token" index="3" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="XmlNameSyntax" hashtags="#xml #name">
      <Properties>
        <Property name="Prefix" kind="Node" index="0" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
            <!--<Pairwise discriminant="true"/>?-->
          </Rules>
        </Property>
        <Property name="LocalName" kind="Token" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="XmlPrefixSyntax" hashtags="#xml">
      <Properties>
        <Property name="Prefix" kind="Token" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ColonToken" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <!--An Related$XmlAttributeSyntax-->
    <Type name="XmlAttributeSyntax" abstract="true">
      <Properties>
        <Property name="Name" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EqualsToken" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single">
        </Property>
        <Property name="StartQuoteToken" kind="Token" index="2" readOnly="true" optional="false" multiplicity="Single">
        </Property>
        <Property name="EndQuoteToken" kind="Token" index="3" readOnly="true" optional="false" multiplicity="Single">
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="XmlTextAttributeSyntax" base="XmlAttributeSyntax" hashtags="#xml #XML#Attribute #attribute #text">
      <Properties>
        <Property name="Name" kind="Node" index="0" optional="false" changepoint="true" inherited="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EqualsToken" kind="Token" index="1" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="StartQuoteToken" kind="Token" index="2" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Options exclusive="true">
            <Kind name="SingleQuoteToken" puntuaction="true"/>
            <Kind name="DoubleQuoteToken" puntuaction="true"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
          <!-- readOnly="true"-->
        </Property>
        <Property name="TextTokens" kind="Node" index="3" optional="false" changepoint="true" multiplicity="Collection">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EndQuoteToken" kind="Token" index="4" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Options exclusive="true">
            <Kind name="SingleQuoteToken" puntuaction="true"/>
            <Kind name="DoubleQuoteToken" puntuaction="true"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
          <!-- readOnly="true"-->
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="XmlCrefAttributeSyntax" base="XmlAttributeSyntax" hashtags="#xml #XML#Attribute #cref #attribute">
      <Properties>
        <Property name="Name" kind="Node" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EqualsToken" kind="Token" index="1" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="StartQuoteToken" kind="Token" index="2" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Options exclusive="true">
            <Kind name="SingleQuoteToken" puntuaction="true"/>
            <Kind name="DoubleQuoteToken" puntuaction="true"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
          <!-- readOnly="true"-->
        </Property>
        <Property name="Cref" kind="Node" index="3" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EndQuoteToken" kind="Token" index="4" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Options exclusive="true">
            <Kind name="SingleQuoteToken" puntuaction="true"/>
            <Kind name="DoubleQuoteToken" puntuaction="true"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
          <!-- readOnly="true"-->
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="XmlNameAttributeSyntax" base="XmlAttributeSyntax" hashtags="#xml #XML#Attribute #PARAMETER #name #attribute">
      <Properties>
        <Property name="Name" kind="Node" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EqualsToken" kind="Token" index="1" readOnly="true" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="StartQuoteToken" kind="Token" index="2" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Options exclusive="true">
            <Kind name="SingleQuoteToken" puntuaction="true"/>
            <Kind name="DoubleQuoteToken" puntuaction="true"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
          <!-- readOnly="true"-->
        </Property>
        <Property name="Identifier" kind="Node" index="3" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EndQuoteToken" kind="Token" index="4" optional="false" inherited="true" multiplicity="Single" puntuaction="true">
          <Options exclusive="true">
            <Kind name="SingleQuoteToken" puntuaction="true"/>
            <Kind name="DoubleQuoteToken" puntuaction="true"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
          <!-- readOnly="true"-->
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="XmlTextSyntax" base="XmlNodeSyntax" hashtags="#xml #XML#Node #text">
      <Properties>
        <Property name="TextTokens" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Collection">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>
    <Type name="XmlCDataSectionSyntax" base="XmlNodeSyntax" hashtags="#xml #XML#Node">
      <Properties>
        <Property name="StartCDataToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="TextTokens" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Collection">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EndCDataToken" kind="Token" index="2" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>
    <Type name="XmlProcessingInstructionSyntax" base="XmlNodeSyntax" hashtags="#xml #XML#Node">
      <Properties>
        <Property name="StartProcessingInstructionToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Name" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="TextTokens" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Collection">
          <Rules collection="true">            
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EndProcessingInstructionToken" kind="Token" index="3" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="XmlCommentSyntax" base="XmlNodeSyntax" hashtags="#xml #XML#Node #comment">
      <Properties>
        <Property name="LessThanExclamationMinusMinusToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="TextTokens" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Collection">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="MinusMinusGreaterThanToken" kind="Token" index="2" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>

    <!--CompilationUnitSyntax - Level 4-->
    <Type name="CompilationUnitSyntax">
      <Properties>
        <Property name="Externs" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Collection" collectionType="ExternAliasDirectiveSyntax">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Usings" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Collection" collectionType="UsingDirectiveSyntax">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="AttributeLists" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Collection" collectionType="AttributeListSyntax">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Members" kind="Node" index="3" optional="false" changepoint="true" multiplicity="Collection" collectionType="MemberDeclarationSyntax">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EndOfFileToken" kind="Token" index="4" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="ExternAliasDirectiveSyntax" hashtags="#directive #alias">
      <Properties>
        <Property name="ExternKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="AliasKeyword" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" kind="Token" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" kind="Token" index="3" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="UsingDirectiveSyntax" hashtags="#directive">
      <Properties>
        <Property name="UsingKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="StaticKeyword" kind="Token" index="1" readOnly="true" optional="true" changepoint="true" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Alias" kind="Node" index="2" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Name" kind="Node" index="3" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" kind="Token" index="4" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="NamespaceDeclarationSyntax" base="MemberDeclarationSyntax" hashtags="#declaration #DECLARATION#Member">
      <Properties>
        <Property name="NamespaceKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Name" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="OpenBraceToken" kind="Token" index="2" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Externs" kind="Node" index="3" optional="false" changepoint="true" multiplicity="Collection" collectionType="ExternAliasDirectiveSyntax">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Usings" kind="Node" index="4" optional="false" changepoint="true" multiplicity="Collection" collectionType="UsingDirectiveSyntax">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Members" kind="Node" index="5" optional="false" changepoint="true" multiplicity="Collection" collectionType="MemberDeclarationSyntax">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseBraceToken" kind="Token" index="6" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" kind="Token" index="7" readOnly="true" optional="true" changepoint="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="AttributeListSyntax" hashtags="#list #attribute">
      <Properties>
        <Property name="OpenBracketToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Target" kind="Node" index="1" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <!--<Name equality="true" absolute="true"/>-->
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Attributes" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Collection" collectionType="AttributeSyntax" collectionSeparator=",">
          <Rules collection="true">
            <!--<Name equality="true" absolute="true"/>-->
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseBracketToken" kind="Token" index="3" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <!--<Name equality="true" absolute="true"/>-->
      </Rules>
    </Type>
    <Type name="AttributeTargetSpecifierSyntax" hashtags="#attribute #specifier">
      <Properties>
        <Property name="Identifier" kind="Token" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <!--<Name equality="true" absolute="true"/>-->
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ColonToken" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <!--<Name equality="true" absolute="true"/>-->
      </Rules>
    </Type>
    <Type name="AttributeSyntax" hashtags="#attribute #DECLARATION">
      <Properties>
        <Property name="Name" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ArgumentList" kind="Node" index="1" optional="true" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="AttributeArgumentListSyntax" hashtags="#list #attribute #attribute#argument #argument">
      <Properties>
        <Property name="OpenParenToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Arguments" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Collection" collectionType="AttributeArgumentSyntax" collectionSeparator=",">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" kind="Token" index="2" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>
    <Type name="AttributeArgumentSyntax" hashtags="#attribute#argument #attribute #argument">
      <Properties>
        <Property name="NameEquals" kind="Node" index="0" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Compatibility>
              <Exclusive mutually="true" with="NameColon"/>
            </Compatibility>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="NameColon" kind="Node" index="1" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Expression" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>

    <!--New ones for C# 7.x-->
    <Type name="WhenClauseSyntax" base="CSharpSyntaxNode" hashtags="#SWITCH #SWITCH#LABEL #CATCH #clause">
      <Properties>
        <Property name="WhenKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Condition" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="TupleTypeSyntax" base="TypeSyntax" hashtags="#Expression #Expression#Type #tuple #type">
      <Properties>
        <Property name="OpenParenToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Elements" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Collection" collectionType="TupleElementSyntax" collectionSeparator=",">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" kind="Token" index="2" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>
    <Type name="TupleExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #tuple">
      <Properties>
        <Property name="OpenParenToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Arguments" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Collection" collectionType="ArgumentSyntax" collectionSeparator=",">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" kind="Token" index="2" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>
    <Type name="TupleElementSyntax" base="CSharpSyntaxNode" hashtags="#tuple #element">
      <Properties>
        <Property name="Type" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true" priority="1"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" kind="Token" index="1" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true" priority="0"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="ThrowExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #throw">
      <Properties>
        <Property name="ThrowKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>

    <Type name="VariableDesignationSyntax" base="CSharpSyntaxNode" abstract="true"/>
    <Type name="SingleVariableDesignationSyntax" base="VariableDesignationSyntax" hashtags="#variable #VARIABLE#Designation">
      <!--declaration-->
      <Properties>
        <Property name="Identifier" kind="Token" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="DiscardDesignationSyntax" base="VariableDesignationSyntax" readonly="true" hashtags="#VARIABLE#Designation">
      <Properties>
        <Property name="UnderscoreToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="ParenthesizedVariableDesignationSyntax" base="VariableDesignationSyntax" hashtags="#variable #VARIABLE#Designation #parenthesized">
      <!--declaration-->
      <Properties>
        <Property name="OpenParenToken" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Variables" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Collection" collectionType="VariableDesignationSyntax" collectionSeparator=",">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" kind="Token" index="2" readOnly="true" optional="false" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>

    <Type name="RefExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #ref">
      <Properties>
        <Property name="RefKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>

    <Type name="CasePatternSwitchLabelSyntax" base="SwitchLabelSyntax" hashtags="#switch #SWITCH#Label #pattern #label">
      <Properties>
        <Property name="Keyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" inherited="true" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Pattern" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
            </Rules>
        </Property>
        <Property name="WhenClause" kind="Node" index="2" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ColonToken" kind="Token" index="3" readOnly="true" optional="false" multiplicity="Single" inherited="true" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="IsPatternExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #pattern">
      <Properties>
        <Property name="Expression" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="IsKeyword" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Pattern" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="DeclarationExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #declaration #VARIABLE #DECLARATION"><!--variable-->
      <Properties>
        <Property name="Type" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Designation" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="CommonForEachStatementSyntax" base="StatementSyntax" abstract="true">
      <Properties>
        <Property name="ForEachKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" inherited="true" keyword="true">
        </Property>
        <Property name="OpenParenToken" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single">
        </Property>
        <Property name="InKeyword" kind="Token" index="2" readOnly="true" optional="false" multiplicity="Single" inherited="true" keyword="true">
        </Property>
        <Property name="Expression" kind="Node" index="3" optional="false" changepoint="true" multiplicity="Single">
        </Property>
        <Property name="CloseParenToken" kind="Token" index="4" readOnly="true" optional="false" multiplicity="Single">
        </Property>
        <Property name="Statement" kind="Node" index="5" optional="false" changepoint="true" multiplicity="Single">
        </Property>
      </Properties>
      <!--For compatibility-->
    </Type>
    <Type name="ForEachVariableStatementSyntax" base="CommonForEachStatementSyntax" hashtags="#Statement #statement #Statement#ForEach #for #variable">
      <!--declaration-->
      <Properties>
        <Property name="ForEachKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" inherited="true" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenParenToken" kind="Token" index="1" readOnly="true" optional="false" multiplicity="Single" inherited="true" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Variable" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="InKeyword" kind="Token" index="3" readOnly="true" optional="false" multiplicity="Single" inherited="true" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" kind="Node" index="4" optional="false" changepoint="true" multiplicity="Single" inherited="true">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" kind="Token" index="5" readOnly="true" optional="false" multiplicity="Single" inherited="true" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Statement" kind="Node" index="6" optional="false" changepoint="true" multiplicity="Single" inherited="true">
          <Rules eventuallyCollection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>

    <Type name="PatternSyntax" base="CSharpSyntaxNode" abstract="true"/>
    <Type name="DeclarationPatternSyntax" base="PatternSyntax" hashtags="#Pattern #declaration #VARIABLE#DECLARATOR #pattern"><!--variable-->
      <!--declaration-->
      <Properties>
        <Property name="Type" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Designation" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Options exclusive="true">
            <Kind name="SingleVariableDesignation" expression="true"/>
            <Kind name="DiscardDesignation" expression="true"/>
          </Options>
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="ConstantPatternSyntax" base="PatternSyntax" hashtags="#Pattern #pattern">
      <Properties>
        <Property name="Expression" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>

    <Type name="LocalFunctionStatementSyntax" base="StatementSyntax" hashtags="#Statement #statement #DECLARATION#LOCAL #DECLARATION#FUNCTION">
      <Properties>
        <Property name="Modifiers" kind="Node" index="0" optional="false" changepoint="true" multiplicity="Collection">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="ReturnType" kind="Node" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" kind="Token" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="TypeParameterList" kind="Node" index="3" optional="true" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ParameterList" kind="Node" index="4" optional="false" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ConstraintClauses" kind="Node" index="5" optional="false" changepoint="true" multiplicity="Collection" collectionType="TypeParameterConstraintClauseSyntax">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Body" kind="Node" index="6" optional="true" changepoint="true" inherited="true" multiplicity="Single">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ExpressionBody" kind="Node" index="7" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" kind="Token" index="8" readOnly="true" optional="true" multiplicity="Single" puntuaction="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Signature equality="true" absolute="true"/>
        <Name equality="true" absolute="true"/>
      </Rules>
      <!--Method compatibility-->
    </Type>
    <Type name="RefTypeSyntax" base="TypeSyntax" hashtags="#Expression #Expression#Type #ref #type">
      <Properties>
        <Property name="RefKeyword" kind="Token" index="0" readOnly="true" optional="false" multiplicity="Single" inherited="true" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="ReadOnlyKeyword" kind="Token" index="1" readOnly="true" optional="true" multiplicity="Single" inherited="true" keyword="true">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Type" kind="Node" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
  </Nodes>
</Syntax>